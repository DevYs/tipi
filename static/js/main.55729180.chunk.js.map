{"version":3,"sources":["page/Data.js","page/UserInfo.js","page/TIPITest.js","page/TIPIResult.js","App.js","reportWebVitals.js","index.js"],"names":["Gender","Age","AgreeDisagree","Question","Personality","personalityTitle","personality","TIPINorm","TIPINormLow","TIPINormHigh","tipiMessage","gender","age","value","low","high","message","description","UserInfo","navigate","useNavigate","useState","name","setName","setGender","setAge","htmlFor","id","type","onChange","e","target","data","map","index","onClick","state","userInfo","alert","props","no","questionNo","question","answer","clickAnswer","Answer","TIPITest","answerList","setAnswerList","questionList","setQuestionList","useLocation","useEffect","sort","Math","random","randomQuestion","floor","q","a","newArray","i","average","className","point","Circle","up","down","singlePoint","singleClassName","check","p","v","calculator","value1","value2","makeChartOption","values","chart","toolbar","show","height","width","series","labels","yaxis","min","max","tickAmount","TIPIResult","refUserChart","useRef","refNormalChart","openness","conscientiouness","extroversion","agreeableness","neuroticism","userChartOptions","normalChartOptions","ApexCharts","current","render","ref","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55729180.chunk.js","sourcesContent":["const Gender = [\n\t'남성',\n\t'여성'\n];\n\nconst GenderValue = {\n\tMALE: 0,\n\tFEMALE: 1\n};\n\nconst Age = [\n\t'15세 ~ 20세',\n\t'21세 ~ 30세',\n\t'31세 ~ 40세',\n\t'41세 ~ 50세',\n\t'51세 ~ 60세',\n\t'61세이상'\n];\n\nconst AgeValue = {\n\tAGE_15_20: 0,\n\tAGE_21_30: 1,\n\tAGE_31_40: 2,\n\tAGE_41_50: 3,\n\tAGE_51_60: 4,\n\tAGE_60_: 5\n};\n\nconst AgreeDisagree = {\n\tDISAGREE_STRONGLY: 1,\n\tDISAGREE_MODERATELY: 2,\n\tDISAGREE_A_LITTLE: 3,\n\tNEITHER_AGREE_NOR_DISAGREE: 4,\n\tAGREE_A_LITTLE: 5,\n\tAGREE_MODERATELY: 6,\n\tAGREE_STRONGLY: 7\n};\n\nconst Question = [\n\t[\n\t\t'나는 외향적이고, 열정적이다.',\n\t\t'나는 활발하고, 열심히 하는 사람이다.',\n\t\t'나는 사교적이고, 적극적이다.'\n\t],\n\t[\n\t\t'나는 비판적이고, 논쟁을 좋아한다.',\n\t\t'나는 따지기를 좋아하고, 다투기를 잘하는 사람이다.',\n\t\t'나는 문제를 지적하기 좋아하고, 토론하기를 좋아한다.'\n\t],\n\t[\n\t\t'나는 사람들에게 신뢰를 얻고 있으며, 자기 관리가 가능하다.',\n\t\t'나는 믿음직스럽고, 자기관리가 가능한 사람이다.',\n\t\t'나는 신뢰할 수 있고, 자기 절제를 잘한다.'\n\t],\n\t[\n\t\t'나는 불안하고, 화를 잘 낸다.',\n\t\t'나는 불안하고, 화를 잘 내는 사람이다.',\n\t\t'나는 근심 걱정이 많은 편이며, 쉽게 흥분한다.'\n\t],\n\t[\n\t\t'나는 새로운 것을 경험하기 좋아하고, 생각이 복잡하다.',\n\t\t'나는 새로운 경험을 마다하지 않으며, 여러 가지로 생각해보는 사람이다.',\n\t\t'나는 새로운 경험들에 개방적이고, 복잡다단하다.'\n\t],\n\t[\n\t\t'나는 내향적이고, 조용하다.',\n\t\t'나는 내향적이고, 조용한 사람이다.',\n\t\t'나는 활동적이지 않은 편이며, 조용하다.'\n\t],\n\t[\n\t\t'나는 동정심이 많고, 다정하다.',\n\t\t'나는 동정심이 많고, 다정한 사람이다.',\n\t\t'나는 동정심이 많고, 다정다감하다.'\n\t],\n\t[\n\t\t'나는 무질서하고, 부주의하다.',\n\t\t'나는 계획적이지 않고, 조심성 없는 사람이다.',\n\t\t'나는 정리정돈을 잘 못하는 편이고, 덤벙되는 편이다.'\n\t],\n\t[\n\t\t'나는 침착하고, 정서가 안정적이다.',\n\t\t'나는 침착하고, 기분이 안정된 사람이다.',\n\t\t'나는 차분하고 감정의 기복이 적다.'\n\t],\n\t[\n\t\t'나는 변화를 싫어하고, 창조적이지 않다.',\n\t\t'나는 변화를 싫어하며, 창의적이지 않은 사람이다.',\n\t\t'나는 변화를 싫어하는 편이며, 창의적이지 못한 것 같다.'\n\t],\n];\n\nconst Personality = {\n\tOPENNESS: 0,\n\tCONSCIENTIOUNESS: 1,\n\tEXTROVERSION: 2,\n\tAGREEABLENESS: 3,\n\tNEUROTICISM: 4\n};\n\nconst personalityTitle = (personality) => {\n\tswitch(personality) {\n\t\tcase Personality.OPENNESS: return '경험에 대한 개방성';\n\t\tcase Personality.CONSCIENTIOUNESS: return '성실성';\n\t\tcase Personality.EXTROVERSION: return '외향성';\n\t\tcase Personality.AGREEABLENESS: return '친화우호성';\n\t\tcase Personality.NEUROTICISM: return '정서안정성';\n\t\tdefault: return;\n\t}\n};\n\n// 성별, 연령대별 성격 평균 점수.\n// 배열의 다섯가지 값은 OPENNESS(0), CONSCIENTIOUNESS(1), EXTROVERSION(2), AGREEABLENESS(3), NEUROTICISM(4) 순서의 인덱스를 갖는다.\nconst TIPINorm = [\n\t[ // MALE\n\t\t[5.43, 4.41, 3.79, 4.47, 4.61], // '15세 ~ 20세'\n\t\t[5.49, 4.57, 3.73, 4.5, 4.64],  // '21세 ~ 30세'\n\t\t[5.49, 4.77, 3.81, 4.55, 4.63], // '31세 ~ 40세'\n\t\t[5.41, 4.96, 3.85, 4.7, 4.72],  // '41세 ~ 50세'\n\t\t[5.39, 5.11, 3.87, 4.89, 4.8],  // '51세 ~ 60세'\n\t\t[5.37, 5.26, 3.85, 4.95, 4.92]  // '61세이상'\n\t],\n\t[ // FEMALE\n\t\t[5.58, 4.52, 4.06, 4.73, 4.07], // '15세 ~ 20세'\n\t\t[5.55, 4.78, 4.07, 4.88, 4.09], // '21세 ~ 30세'\n\t\t[5.49, 4.97, 4.17, 5.04, 4.25], // '31세 ~ 40세'\n\t\t[5.46, 5.18, 4.2, 5.28, 4.49],  // '41세 ~ 50세'\n\t\t[5.42, 5.35, 4.18, 5.43, 4.66], // '51세 ~ 60세'\n\t\t[5.39, 5.39, 4.21, 5.5, 4.84]   // '61세이상'\n\t]\n];\n\nconst TIPINormLow = [\n\t[ // MALE\n\t\t[5.43 - 1.17, 4.41 - 1.39, 3.79 - 1.55, 4.47 - 1.22, 4.61 - 1.47], // '15세 ~ 20세'\n\t\t[5.49 - 1.13, 4.57 - 1.39, 3.73 - 1.54, 4.5 - 1.2, 4.64 - 1.46],  // '21세 ~ 30세'\n\t\t[5.49 - 1.12, 4.77 - 1.35, 3.81 - 1.54, 4.55 - 1.21, 4.63 - 1.42], // '31세 ~ 40세'\n\t\t[5.41 - 1.17, 4.96 - 1.35, 3.85 - 1.54, 4.7 - 1.18, 4.72 - 1.39],  // '41세 ~ 50세'\n\t\t[5.39 - 1.2, 5.11 - 1.31, 3.87 - 1.54, 4.89 - 1.18, 4.8 - 1.38],  // '51세 ~ 60세'\n\t\t[5.37 - 1.26, 5.26 - 1.3, 3.85 - 1.49, 4.95 - 1.17, 4.92 - 1.34]  // '61세이상'\n\t],\n\t[ // FEMALE\n\t\t[5.58 - 1.1, 4.52 - 1.42, 4.06 - 1.58, 4.73 - 1.22, 4.07 - 1.46], // '15세 ~ 20세'\n\t\t[5.55 - 1.12, 4.78 - 1.41, 4.07 - 1.61, 4.88 - 1.19, 4.09 - 1.45], // '21세 ~ 30세'\n\t\t[5.49 - 1.18, 4.97 - 1.41, 4.17 - 1.64, 5.04 - 1.19, 4.25 - 1.45], // '31세 ~ 40세'\n\t\t[5.46 - 1.2, 5.18 - 1.36, 4.2 - 1.64, 5.28 - 1.17, 4.49 - 1.45],  // '41세 ~ 50세'\n\t\t[5.42 - 1.25, 5.35 - 1.31, 4.18 - 1.6, 5.43 - 1.14, 4.66 - 1.44], // '51세 ~ 60세'\n\t\t[5.39 - 1.27, 5.39 - 1.36, 4.21 - 1.62, 5.5 - 1.15, 4.84 - 1.4]   // '61세이상'\n\t]\n];\n\nconst TIPINormHigh = [\n\t[ // MALE\n\t\t[5.43 + 1.17, 4.41 + 1.39, 3.79 + 1.55, 4.47 + 1.22, 4.61 + 1.47], // '15세 ~ 20세'\n\t\t[5.49 + 1.13, 4.57 + 1.39, 3.73 + 1.54, 4.5 + 1.2, 4.64 + 1.46],  // '21세 ~ 30세'\n\t\t[5.49 + 1.12, 4.77 + 1.35, 3.81 + 1.54, 4.55 + 1.21, 4.63 + 1.42], // '31세 ~ 40세'\n\t\t[5.41 + 1.17, 4.96 + 1.35, 3.85 + 1.54, 4.7 + 1.18, 4.72 + 1.39],  // '41세 ~ 50세'\n\t\t[5.39 + 1.2, 5.11 + 1.31, 3.87 + 1.54, 4.89 + 1.18, 4.8 + 1.38],  // '51세 ~ 60세'\n\t\t[5.37 + 1.26, 5.26 + 1.3, 3.85 + 1.49, 4.95 + 1.17, 4.92 + 1.34]  // '61세이상'\n\t],\n\t[ // FEMALE\n\t\t[5.58 + 1.1, 4.52 + 1.42, 4.06 + 1.58, 4.73 + 1.22, 4.07 + 1.46], // '15세 ~ 20세'\n\t\t[5.55 + 1.12, 4.78 + 1.41, 4.07 + 1.61, 4.88 + 1.19, 4.09 + 1.45], // '21세 ~ 30세'\n\t\t[5.49 + 1.18, 4.97 + 1.41, 4.17 + 1.64, 5.04 + 1.19, 4.25 + 1.45], // '31세 ~ 40세'\n\t\t[5.46 + 1.2, 5.18 + 1.36, 4.2 + 1.64, 5.28 + 1.17, 4.49 + 1.45],  // '41세 ~ 50세'\n\t\t[5.42 + 1.25, 5.35 + 1.31, 4.18 + 1.6, 5.43 + 1.14, 4.66 + 1.44], // '51세 ~ 60세'\n\t\t[5.39 + 1.27, 5.39 + 1.36, 4.21 + 1.62, 5.5 + 1.15, 4.84 + 1.4]   // '61세이상'\n\t]\n];\n\nconst tipiMessage = (personality, gender, age, value) => {\n\tlet low = TIPINormLow[gender][age][personality];\n\tlet high = TIPINormHigh[gender][age][personality];\n\n\tlet message = [\n\t\t['평범한 개방성'],\n\t\t['평범한 성실성'],\n\t\t['평범한 외향성'],\n\t\t['평범한 친화우호성'],\n\t\t['평범한 정서안정성']\n\t];\n\n\tif(value <= low) {\n\t\tmessage = [\n\t\t\t['상상력이 빈약한', '창의적이지 않은', '호기심이 적은', '생각이 얕은', '단순한'],\n\t\t\t['비체계적인', '무책임한', '현실적이 아닌', '부주의한', '게으른'],\n\t\t\t['조용한', '주장이 약한', '모험을 하지 않는', '열정적이지 않은', '소심한'],\n\t\t\t['불친절한', '비협조적인', '이기적인', '잘 믿지 않는', '인색한'],\n\t\t\t['긴장된', '불안한', '불안정한', '불만스러운', '감정적인']\n\t\t];\n\t} else if(high <= value) {\n\t\tmessage = [\n\t\t\t['상상력이 풍부한', '창의적인', '호기심 많은', '생각이 깊은', '세련된'],\n\t\t\t['체계적인', '책임감 있는', '현실적인', '철저한', '근면한'],\n\t\t\t['말이 많은', '주장이 강한', '모험적인', '열정적인', '대담한'],\n\t\t\t['친절한', '협조적인', '이기적이 아닌', '잘 믿는', '관대한'],\n\t\t\t['편안한', '이완된', '안정된', '만족하는', '침착한']\n\t\t];\n\t}\n\n\treturn message[personality];\n};\n\nconst description = [\n\t'경험에 대한 개방성은 호기심이 많고 새로운 체험을 좋아하는 열린 자세를 말합니다. 경험에 대한 개방성이 높은 사람은 독창적이고 독립적이며 예술적인 동시에 진보적입니다.  또한, 유머감각이 좋고, 이성과의 친밀한 관계맺기 능력이 탁월하지만, 그 관계를 오랫동안 지속하지 못하는 경향이 있습니다. 반면, 개방성이 낮은 사람은 인습적이며 현실적이고 전통과 권위, 안정과 질서를 좋아하며 순응적인 사람입니다.',\n\t'성실성은 자기통제와 조절을 잘하면서 성취를 위해 책임감을 보이는 성품을 나타냅니다. 성실성이 높다면 평균 학점도 높고 직업적 성공을 거두는 경향이 있으며, 인간관계의 만족도와 안정도가 높습니다. 다만, 지나치게 성실성이 높은 사람이라면 자기 기준을 고집하여 오히려 인간관계에서 갈등을 자주 경험할 수도 있습니다. 반면, 성실성이 낮은 사람은 산만하고 일관성이 없으며 나태합니다. 이런 사람들은 여유롭고 시원스러운 점이 매력적으로 보일 때도 있지만, 책임감의 부족으로 인해 장기적으로는 신뢰있는 인간관계를 유지하지 못하는 이들입니다.',\n\t'외향성은 다른 사람과의 교류를 통해 인간관계적 자극을 추구하려는 성향을 말합니다. 외향성이 높은 사람은 낯선 사람에게도 스스럼없이 다가가서 쉽게 대화를 나누고, 더 먼저 말하고 더 많이 말합니다. 그래서 이런 사람들은 다양한 사람들과 넓은 인간관계를 맺으며, 새로운 도전을 좋아하기 때문에 성공도 많이 하지만 실패도 많이 합니다. 그래서 극단적으로 외향성이 높은 사람이라면 지루함을 견디지 못하기 때문에 폭음이나 도박, 이혼의 경향이 존재합니다.',\n\t'친화우호성은 타인을 적대적으로 여기지 않는 성품으로, 우호적이며 협동적으로 타인을 대하기에 인간관계의 질을 높여주는 성격요인입니다. 우호적이고 친화성이 높은 사람은 따뜻하고 부드러우며 공감적인 동시에 인간관계의 만족도와 결혼생활 안정도가 높은 경향을 보입니다. 반면에 친화우호성이 떨어지는 사람은 타인의 감정을 이해하는 공감능력이 부족하고 때로는 적대적인 성향을 보일 수 있습니다. 또한, 자기주장과 자기이익을 내세우며 잘 확보하려는 경향을 보입니다.',\n\t'정서안정성은 분노나 우울, 불안과 같은 부적응적 정서를 잘 느끼는 경향을 말합니다. 적응하지 못하기에 정서적으로 예민하고 불안정합니다. 그래서 사소한 일에도 쉽게 상처받고, 우울이나 불안 같은 불쾌한 정서를 쉽게 느끼면서 스트레스를 잘 받고 변덕이 심합니다. 신경이 예민한 사람들은 인간관계에서도 갈등과 불화를 잘 겪습니다. 한마디로 개인적 부적응이 관계적 부적응으로 이어지는 것 입니다. 반면, 정서안정성이 사람들은 실패의 예방을 잘하고 직업적 성공을 거두며 심리적 성숙을 위해 더 많은 노력을 보이기도 합니다.'\n];\n\n\n\nexport { Age, AgeValue, Gender, GenderValue, AgreeDisagree, Question, Personality, TIPINorm, TIPINormLow, TIPINormHigh, tipiMessage, description, personalityTitle }","import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './UserInfo.css';\nimport * as data from './Data';\n\nconst UserInfo = () => {\n\tconst navigate = useNavigate();\n\tconst [name, setName] = useState();\n\tconst [gender, setGender] = useState();\n\tconst [age, setAge] = useState();\n\n\tconst clickNext = () => {\n\t\tif(!name || !gender || !age) {\n\t\t\talert('모든 정보를 입력하세요.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst userInfo = {\n\t\t\tname:name,\n\t\t\tgender:gender,\n\t\t\tage:age\n\t\t};\n\n\t\tnavigate(\n\t\t\t'/tipi/test',\n\t\t\t{\n\t\t\t\tstate: {\n\t\t\t\t\t userInfo: userInfo\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<form>\n\t\t\t\t\t<dl>\n\t\t\t\t\t\t<dt><label htmlFor={'name'}>이름</label></dt>\n\t\t\t\t\t\t<dd><input id={'name'} type={'text'} onChange={(e) => setName(e.target.value)} /></dd>\n\t\t\t\t\t</dl>\n\t\t\t\t\t<dl>\n\t\t\t\t\t\t<dt>성별</dt>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata.Gender.map((gender, index) =>\n\t\t\t\t\t\t\t\t<dd key={index}>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input type={'radio'} name={'gender'} value={index} onChange={(e) => setGender(e.target.value)} /> {gender}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</dl>\n\t\t\t\t\t<dl>\n\t\t\t\t\t\t<dt>연령</dt>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdata.Age.map((age, index) =>\n\t\t\t\t\t\t\t\t<dd key={index}>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<input type={'radio'} name={'age'} value={index} onChange={(e) => setAge(e.target.value)} /> {age}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</dl>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t<button onClick={clickNext}>다음</button>\n\t\t</>\n\t);\n};\n\nexport default UserInfo;","import { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport './TIPITest.css';\nimport * as data from './Data';\n\nconst makeQuestList = () => {\n\tconst noList = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].sort(() => Math.random() - 0.5);\n\treturn noList.map(no => {\n\t\tconst randomQuestion = Math.floor(Math.random() * (2 - 0 + 1)) + 0; //최댓값도 포함, 최솟값도 포함\n\t\treturn {\n\t\t\tno: no,\n\t\t\tquestion: data.Question[no][randomQuestion]\n\t\t}\n\t});\n};\n\nconst TIPITest = () => {\n\tconst [answerList, setAnswerList] = useState([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\tconst [questionList, setQuestionList] = useState();\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst state = location.state;\n\n\tuseEffect(() => setQuestionList(makeQuestList()), []);\n\n\tconst clickAnswer = (q, a) => {\n\t\tconst newArray = answerList.map(answer => answer);\n\t\tnewArray[q] = a;\n\t\tsetAnswerList(newArray);\n\t};\n\n\tconst clickNext = () => {\n\t\tnavigate(\n\t\t\t'/tipi/result',\n\t\t\t{\n\t\t\t\tstate: {\n\t\t\t\t\tuserInfo: state.userInfo,\n\t\t\t\t\tanswer: answerList\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t};\n\n\treturn (\n\t\t<section id={'tipi-test'}>\n\t\t\t<h2>10개 항목 성격 측정</h2>\n\t\t\t<p>아래 문항을 읽고 해당 얼마나 일치하는지 선택해주세요. 선택하는 시간이 짧을수록 정확한 테스트 결과를 얻을 수 있어요.</p>\n\n\t\t\t{questionList && questionList.map((question, i) =>\n\t\t\t\t<Question key={i} no={i + 1} questionNo={question.no} question={question.question} clickAnswer={clickAnswer} />\n\t\t\t)}\n\t\t\t<button onClick={clickNext}>다음</button>\n\t\t</section>\n\t);\n};\n\nconst Question = (props) => {\n\tconst no = props.no;\n\tconst questionNo = props.questionNo;\n\tconst question = props.question;\n\n\treturn (\n\t\t<article>\n\t\t\t<p>{no}. {question}</p>\n\t\t\t<ul>\n\t\t\t\t{[1, 2, 3, 4, 5, 6, 7].map(answer => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={answer}>\n\t\t\t\t\t\t\t<Answer no={no} answer={answer} onChange={() => props.clickAnswer(questionNo, answer)} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</article>\n\t);\n};\n\nconst Answer = (props) => {\n\tconst no = props.no;\n\tconst answer = props.answer;\n\treturn (\n\t\t<label>\n\t\t\t<input type={'radio'} name={`question_${no}`} onChange={props.onChange} /> {answer}\n\t\t</label>\n\t);\n}\n\nexport default TIPITest;","import { useRef, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './TIPIResult.css';\n\nimport ApexCharts from 'apexcharts'\nimport * as data from './Data';\n\nconst TIPIResult = () => {\n\tconst refUserChart = useRef();\n\tconst refNormalChart = useRef();\n\tconst location = useLocation();\n\tconst state = location.state;\n\tconst userInfo = state.userInfo;\n\tconst answer = state.answer;\n\tconst average = data.TIPINorm[userInfo.gender][userInfo.age];\n\tconst openness = calculator(answer[4], answer[9]);\n\tconst conscientiouness = calculator(answer[2], answer[7]);\n\tconst extroversion = calculator(answer[0], answer[5]);\n\tconst agreeableness = calculator(answer[6], answer[1]);\n\tconst neuroticism = calculator(answer[8], answer[3]);\n\n\tuseEffect(() => {\n\t\tconst userChartOptions = makeChartOption([openness, conscientiouness, extroversion, agreeableness, neuroticism]);\n\t\tconst normalChartOptions = makeChartOption(average);\n\n\t\t(async () => {\n\t\t\tawait new ApexCharts(refUserChart.current, userChartOptions).render();\n\t\t\tawait new ApexCharts(refNormalChart.current, normalChartOptions).render();\n\t\t})();\n\t}, [openness, conscientiouness, extroversion, agreeableness, neuroticism, average]);\n\n\treturn (\n\t\t<section id={'tipi-result'}>\n\t\t\t<p>해당 검사는 샘 고슬링 (Sam Gosling), 제이슨 랜트프로우 (Jason Rentfrow), 윌리엄 스완 (William Swann) 등이 10개의 질문으로 짧은 시간에 5가지 성격 특성 요소(Five factor model)를 파악할 수 있도록 개발한 TIPI(Ten-Item Personality Inventory) 검사를 기반으로 제작되었습니다.</p>\n\t\t\t<h2>5가지 성격 측정 결과</h2>\n\t\t\t<p>모든 성격의 점수는 높을수록 긍정적으로 평가되며 편차에 의한 평균의 최저, 최고 점수는 표시하지 않습니다.</p>\n\n\t\t\t<div className={'chart'}>\n\t\t\t\t<article>\n\t\t\t\t\t<strong>{userInfo.name}님의 점수</strong>\n\t\t\t\t\t<div ref={refUserChart}></div>\n\t\t\t\t</article>\n\t\t\t\t<article>\n\t\t\t\t\t<strong>{data.Age[userInfo.age]} 평균</strong>\n\t\t\t\t\t<div ref={refNormalChart}></div>\n\t\t\t\t</article>\n\t\t\t</div>\n\n\t\t\t<table id={'table-chart'}>\n\t\t\t\t<caption>{userInfo.name}의 점수 및 {data.Age[userInfo.age]} 평균</caption>\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>성격</th>\n\t\t\t\t\t\t<th>점수</th>\n\t\t\t\t\t\t<th>평균</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr><th>{data.personalityTitle(data.Personality.OPENNESS)}<br />(Openness)</th><th>{openness}</th><th>{average[data.Personality.OPENNESS]}</th></tr>\n\t\t\t\t\t<tr><th>{data.personalityTitle(data.Personality.CONSCIENTIOUNESS)}<br />(Conscientiouness)</th><th>{conscientiouness}</th><th>{average[data.Personality.CONSCIENTIOUNESS]}</th></tr>\n\t\t\t\t\t<tr><th>{data.personalityTitle(data.Personality.EXTROVERSION)}<br />(Extroversion)</th><th>{extroversion}</th><th>{average[data.Personality.EXTROVERSION]}</th></tr>\n\t\t\t\t\t<tr><th>{data.personalityTitle(data.Personality.AGREEABLENESS)}<br />(Agreeableness)</th><th>{agreeableness}</th><th>{average[data.Personality.AGREEABLENESS]}</th></tr>\n\t\t\t\t\t<tr><th>{data.personalityTitle(data.Personality.NEUROTICISM)}<br />(Neuroticism)</th><th>{neuroticism}</th><th>{average[data.Personality.NEUROTICISM]}</th></tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\n\t\t\t<Personality name={userInfo.name} age={userInfo.age} gender={userInfo.gender} personality={data.Personality.OPENNESS} value={openness} average={average[data.Personality.OPENNESS]} />\n\t\t\t<Personality name={userInfo.name} age={userInfo.age} gender={userInfo.gender} personality={data.Personality.CONSCIENTIOUNESS} value={conscientiouness} average={average[data.Personality.CONSCIENTIOUNESS]} />\n\t\t\t<Personality name={userInfo.name} age={userInfo.age} gender={userInfo.gender} personality={data.Personality.EXTROVERSION} value={extroversion} average={average[data.Personality.EXTROVERSION]} />\n\t\t\t<Personality name={userInfo.name} age={userInfo.age} gender={userInfo.gender} personality={data.Personality.AGREEABLENESS} value={agreeableness} average={average[data.Personality.AGREEABLENESS]} />\n\t\t\t<Personality name={userInfo.name} age={userInfo.age} gender={userInfo.gender} personality={data.Personality.NEUROTICISM} value={neuroticism} average={average[data.Personality.NEUROTICISM]} />\n\n\t\t</section>\n\t);\n};\n\nconst Personality = (props) => {\n\tconst name = props.name;\n\tconst age = props.age;\n\tconst gender = props.gender;\n\tconst value = props.value;\n\tconst average = props.average;\n\tconst personality = props.personality;\n\n\treturn (\n\t\t<div className={'personality-description'}>\n\t\t\t<h3>{data.personalityTitle(personality)}</h3>\n\t\t\t<div className={'circle'}>\n\t\t\t\t<p className={'circle-desc'}>\n\t\t\t\t\t<span>{name}님의 {data.personalityTitle(personality)} 점수</span>\n\t\t\t\t\t<span>{data.Age[age]} 평균 점수</span>\n\t\t\t\t</p>\n\t\t\t\t<Circle point={data.AgreeDisagree.DISAGREE_STRONGLY} value={value} average={average} />\n\t\t\t\t<Circle point={data.AgreeDisagree.DISAGREE_MODERATELY} value={value} average={average} />\n\t\t\t\t<Circle point={data.AgreeDisagree.DISAGREE_A_LITTLE} value={value} average={average} />\n\t\t\t\t<Circle point={data.AgreeDisagree.NEITHER_AGREE_NOR_DISAGREE} value={value} average={average} />\n\t\t\t\t<Circle point={data.AgreeDisagree.AGREE_A_LITTLE} value={value} average={average} />\n\t\t\t\t<Circle point={data.AgreeDisagree.AGREE_MODERATELY} value={value} average={average} />\n\t\t\t\t<Circle point={data.AgreeDisagree.AGREE_STRONGLY} value={value} average={average} />\n\t\t\t</div>\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>{name} 님의 {data.personalityTitle(personality)}</th>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdata.tipiMessage(personality, gender, age, value).map((message, i) => <p key={i}>{message}</p>)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<p>{data.description[personality]}</p>\n\t\t</div>\n\t);\n};\n\nconst Circle = (props) => {\n\tconst point = props.point;\n\tconst value = props.value;\n\tconst average = props.average;\n\tlet up = 0;\n\tlet down = 0;\n\tlet singlePoint = point;\n\tlet className = '';\n\tlet singleClassName = '';\n\n\tconst check = (p, v) => {\n\t\treturn p <= v && v < (p + 1);\n\t};\n\n\tif(value < average) {\n\t\tup = average;\n\t\tdown = value;\n\t} else {\n\t\tup = value;\n\t\tdown = average;\n\t}\n\n\tif(check(point, average)) {\n\t\tsinglePoint = average;\n\t\tsingleClassName = 'average';\n\t} else if(check(point, value)) {\n\t\tsinglePoint = value;\n\t\tsingleClassName = 'value';\n\t}\n\n\tswitch(point) {\n\t\tcase data.AgreeDisagree.DISAGREE_STRONGLY: className = 'disagree-strongly'; break;\n\t\tcase data.AgreeDisagree.DISAGREE_MODERATELY: className = 'disagree-moderately'; break;\n\t\tcase data.AgreeDisagree.DISAGREE_A_LITTLE: className = 'disagree-a-little'; break;\n\t\tcase data.AgreeDisagree.NEITHER_AGREE_NOR_DISAGREE: className = 'neither-agree-nor-disagree'; break;\n\t\tcase data.AgreeDisagree.AGREE_A_LITTLE: className = 'agree-a-little'; break;\n\t\tcase data.AgreeDisagree.AGREE_MODERATELY: className = 'agree-moderately'; break;\n\t\tcase data.AgreeDisagree.AGREE_STRONGLY: className = 'agree-strongly'; break;\n\t\tdefault: return;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ (check(point, average) && check(point, value)) &&\n\t\t\t\t<div className={`${className}`}>\n\t\t\t\t\t <span className={`up ${up === average ? 'average' : 'value'}`}><strong>{up}</strong></span>\n\t\t\t\t\t <span className={`down ${up === average ? 'value' : 'average'}`}><strong>{down}</strong></span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{ !(check(point, average) && check(point, value)) &&\n\t\t\t\t<div className={`single ${className}`}>\n\t\t\t\t\t <span className={`${singleClassName}`}><strong>{singlePoint}</strong></span>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</>\n\t);\n};\n\nconst calculator = (value1, value2) => (value1 + (8 - value2)) / 2;\n\nconst makeChartOption = (values) => {\n\treturn {\n\t\tchart: {\n\t\t\ttype: 'radar',\n\t\t\ttoolbar: { show: false },\n\t\t\theight: '160px',\n\t\t\twidth: '160px'\n\t\t},\n\t\tseries: [{\n\t\t\tname: '',\n\t\t\tdata: values\n\t\t}],\n\t\tlabels: ['O', 'C', 'E', 'A', 'N'],\n\t\tyaxis: {\n\t\t\tshow: true,\n\t\t\tmin: 0,\n\t\t\tmax: 7,\n\t\t\ttickAmount: 7,\n\t\t\tlabels: { show: false }\n\t\t}\n\t};\n};\n\nexport default TIPIResult;","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport UserInfo from \"./page/UserInfo\";\nimport TIPITest from \"./page/TIPITest\";\nimport TIPIResult from \"./page/TIPIResult\";\n\nimport './App.css';\n\nfunction App() {\n\treturn (\n\t\t<main className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route exact={true} path=\"/\" element={<UserInfo />} />\n\t\t\t\t\t\t<Route exact={true} path=\"/tipi/test\" element={<TIPITest />} />\n\t\t\t\t\t\t<Route exact={true} path=\"/tipi/result\" element={<TIPIResult />} />\n\t\t\t\t\t</Routes>\n\t\t\t</BrowserRouter>\n\t\t</main>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}